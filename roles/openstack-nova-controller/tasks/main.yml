
# Install required packages
- name: get the mitaka packages
  apt_repository: repo='deb http://ubuntu-cloud.archive.canonical.com/ubuntu trusty-updates/mitaka main' state=present

- name: install keyring
  apt: pkg={{item}} state=present
  with_items:
    - ubuntu-cloud-keyring

- name: install packages
  apt: pkg={{item}} state=present update_cache=yes
  with_items:
    - nova-api
    - nova-conductor
    - nova-consoleauth
    - nova-novncproxy
    - nova-scheduler
    - python-openstackclient

# Install and configure Nova
- name: create a table for nova
  mysql_db: name=nova state=present

- name: create a table for nova api
  mysql_db: name=nova_api state=present

- name: enable db access 1
  command: mysql -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY '{{ openstack.admin_password }}';"

- name: enable db access 2
  command: mysql  -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY '{{openstack.admin_password}}';"

- name: enable db access 3
  command: mysql -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY '{{ openstack.admin_password }}';"

- name: enable db access 4
  command: mysql  -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY '{{openstack.admin_password}}';"

- name: nova config files
  template: src={{item}}.j2 dest=/etc/nova/{{item}}
  with_items:
      - nova.conf
  notify: restart nova

- name: nova api dbsync
  shell: su -s /bin/sh -c "nova-manage api_db sync" nova

- name: nova dbsync
  shell: su -s /bin/sh -c "nova-manage db sync" nova


- name: flush handlers in case of changed config
  meta: flush_handlers


- name: start nova
  service: name={{ item }} state=started enabled=true
  with_items:
      - nova-api
      - nova-consoleauth
      - nova-scheduler
      - nova-conductor
      - nova-novncproxy

- name: wait for nova to wake up
  pause: seconds=10


# Create glance user, service, and endpoint
- name: collect services
  command: openstack {{ openstack.args }} service list
  register: _services

- name: collect users
  command: openstack {{ openstack.args }} user list
  register: _users

- name: collect roles
  command: openstack {{ openstack.args }} role list
  register: _roles

- name: collect projects
  command: openstack {{ openstack.args }} project list
  register: _projects

- name: collect domains
  command: openstack {{ openstack.args }} domain list
  register: _domains

- name: add nova user
  command: openstack {{openstack.args}} user create --domain default --password {{openstack.admin_password}} nova
  when: "'nova' not in _users.stdout"

- name: add admin role to nova user
  command: openstack {{openstack.args}} role add --project service --user nova admin
  when: "'nova' not in _users.stdout"

- name: add nova service
  command: openstack {{openstack.args}} service create --name nova --description "Openstack Compute" compute
  when: "'nova' not in _services.stdout"

# - name: add nova endpoints
#   command: openstack {{openstack.args}} endpoint create --region RegionOne compute {{item.a}} http://controller:{{ item.b }}/v2.1/%\(tenant_id\)s
#   with_items:
#       - {a: "public", b: 8774}
#       - {a: "internal", b: 8774}
#       - {a: "admin", b: 8774}
#   when: "'nova' not in _services.stdout"

- name: add nova endpoints
  command: openstack {{openstack.args}} endpoint create --region RegionOne compute {{item.a}} http://controller:{{ item.b }}/v2.1/%\(tenant_id\)s
  with_items:
      - {a: "public", b: 8774}
  when: "'nova' not in _services.stdout"

- name: add nova endpoints
  command: openstack {{openstack.args}} endpoint create --region RegionOne compute {{item.a}} http://controller1:{{ item.b }}/v2.1/%\(tenant_id\)s
  with_items:
      - {a: "internal", b: 8774}
  when: "'nova' not in _services.stdout"

- name: add nova endpoints
  command: openstack {{openstack.args}} endpoint create --region RegionOne compute {{item.a}} http://controller2:{{ item.b }}/v2.1/%\(tenant_id\)s
  with_items:
      - {a: "admin", b: 8774}
  when: "'nova' not in _services.stdout"

- name: wait for nova to wake up
  pause: seconds=10
